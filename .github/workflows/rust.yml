name: Rust

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  persistent-database-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up test database Docker containers
        run: |
          docker compose -f test_database_services_docker_compose.yml up -d
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Build
        run: cargo build --verbose
      - name: Run persistent database tests
        run: cargo test -- --ignored
      - name: Tear down test database Docker containers
        run: docker compose -f test_database_services_docker_compose.yml down
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  build-ubuntu-static:
    runs-on: ubuntu-latest
    env: # TODO remove once aws-lc-sys issue fixed
      C_INCLUDE_PATH: "/usr/include"
    steps:
      - uses: actions/checkout@v3
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-static-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Install musl compilation tools
        run: sudo apt-get update && sudo apt-get install -y musl-tools linux-libc-dev
      - name: Add static executable target
        run: rustup target add x86_64-unknown-linux-musl
      - name: Tmp - Link asm directory # TODO remove once aws-lc-sys issue fixed
        run: sudo ln -sf /usr/include/x86_64-linux-gnu/asm /usr/include/asm
      - name: Build
        run: cargo build --verbose --target=x86_64-unknown-linux-musl
      - name: Build release
        run: cargo build --release --verbose --target=x86_64-unknown-linux-musl
      - name: Check static executable
        run: |
          output=$(ldd target/x86_64-unknown-linux-musl/release/qkd_kme_server 2>&1 || true)
          echo "$output"
          if ! echo "$output" | grep -q "statically linked"; then
            echo "ERROR: The binary is not statically linked."
            exit 1
          fi
      - name: Run tests
        run: cargo test --verbose --target=x86_64-unknown-linux-musl
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: disable-defender-monitoring
        run: |
          Set-MpPreference -DisableRealtimeMonitoring $true
          Set-MpPreference -DisableIOAVProtection $true
          Set-MpPreference -DisableBehaviorMonitoring $true
          Set-MpPreference -DisableBlockAtFirstSeen $true
          Set-MpPreference -DisableIntrusionPreventionSystem $true
        shell: powershell
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose